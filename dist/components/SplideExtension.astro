---
// Copyright (c) Pascal Brand
// MIT License

import type { HTMLAttributes } from 'astro/types';
import type { Options } from '@splidejs/splide';
import type { SplideEventHandlers } from '../js/types/events';

import SplideTrack from './SplideTrack.astro'

interface SplideHtmlAttributes extends
  HTMLAttributes<"div">,
  Partial<SplideEventHandlers>
{
  options?: Options;
  hasTrack?: boolean;
  tag?: 'div' | 'section' | 'header' | 'footer' | 'nav';
  toto?:boolean;
}

type Props = SplideHtmlAttributes

const {
  class: className = "",   // the class to add to "splide"
  id: idName = "",
  tag: Root ="div",
  options={},
  hasTrack=true,
  ...props      // the other props, which are SplideHtmlAttributes, such as aria-label,... but not class and id as already get
} = Astro.props;

const splideId = 'astro-splide-' + Math.random().toString(36).slice(2, 11)

---

<astro-splide-extension data-splideid={splideId} data-options={JSON.stringify(options)} >
  <Root id={splideId + idName} class={'splide ' + className} {...props}>
    { hasTrack  &&  (<SplideTrack> <slot /> </SplideTrack>) }
    { !hasTrack &&  (<slot />) }
  </Root>
</astro-splide-extension>
